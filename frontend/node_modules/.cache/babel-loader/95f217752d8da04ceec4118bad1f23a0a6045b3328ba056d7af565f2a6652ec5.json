{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\n\n// Socket connection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    // Fetch previous chat history from DB\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/messages');\n        const data = await response.json();\n        setMessages(data);\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n      }\n    };\n    fetchMessages();\n\n    // Listen for bot's reply\n    socket.on('botReply', data => {\n      const botMessage = {\n        from: 'bot',\n        text: data.text\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Save bot reply to DB\n      fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(botMessage)\n      });\n    });\n\n    // Cleanup\n    return () => {\n      socket.off('botReply');\n    };\n  }, []);\n  const sendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        from: 'user',\n        text: input\n      };\n\n      // Show in UI\n      setMessages(prev => [...prev, userMessage]);\n\n      // Emit to backend\n      socket.emit('sendMessage', {\n        text: input\n      });\n\n      // Save to DB\n      await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userMessage)\n      });\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"50px auto\",\n      padding: \"20px\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\uD83E\\uDD16 Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        overflowY: \"auto\",\n        padding: \"10px\",\n        background: \"#f9f9f9\",\n        marginBottom: \"10px\",\n        borderRadius: \"5px\"\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.from === 'user' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            background: msg.from === 'user' ? \"#d1e7dd\" : \"#e2e3e5\",\n            display: \"inline-block\",\n            padding: \"8px 12px\",\n            borderRadius: \"20px\",\n            margin: \"5px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.from, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          borderRadius: \"20px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          marginLeft: \"10px\",\n          padding: \"10px 20px\",\n          borderRadius: \"20px\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9O8vdW2/zxnqNWKJ7NIr/2i0F2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","fetchMessages","response","fetch","data","json","err","console","error","on","botMessage","from","text","prev","method","headers","body","JSON","stringify","off","sendMessage","trim","userMessage","emit","style","maxWidth","margin","padding","border","borderRadius","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","background","marginBottom","map","msg","i","display","value","onChange","e","target","placeholder","flex","onClick","marginLeft","color","_c","$RefreshReg$"],"sources":["D:/project/chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\n\n// Socket connection\nconst socket = io(\"http://localhost:5000\");\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    // Fetch previous chat history from DB\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/messages');\n        const data = await response.json();\n        setMessages(data);\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n      }\n    };\n\n    fetchMessages();\n\n    // Listen for bot's reply\n    socket.on('botReply', (data) => {\n      const botMessage = { from: 'bot', text: data.text };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Save bot reply to DB\n      fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(botMessage)\n      });\n    });\n\n    // Cleanup\n    return () => {\n      socket.off('botReply');\n    };\n  }, []);\n\n  const sendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = { from: 'user', text: input };\n\n      // Show in UI\n      setMessages(prev => [...prev, userMessage]);\n\n      // Emit to backend\n      socket.emit('sendMessage', { text: input });\n\n      // Save to DB\n      await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userMessage)\n      });\n\n      setInput('');\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: \"600px\", margin: \"50px auto\", padding: \"20px\", border: \"1px solid #ccc\", borderRadius: \"10px\" }}>\n      <h2 style={{ textAlign: \"center\" }}>ðŸ¤– Chatbot</h2>\n      <div style={{ height: \"300px\", overflowY: \"auto\", padding: \"10px\", background: \"#f9f9f9\", marginBottom: \"10px\", borderRadius: \"5px\" }}>\n        {messages.map((msg, i) => (\n          <div key={i} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n            <p style={{ background: msg.from === 'user' ? \"#d1e7dd\" : \"#e2e3e5\", display: \"inline-block\", padding: \"8px 12px\", borderRadius: \"20px\", margin: \"5px 0\" }}>\n              <strong>{msg.from}:</strong> {msg.text}\n            </p>\n          </div>\n        ))}\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={{ flex: 1, padding: \"10px\", borderRadius: \"20px\", border: \"1px solid #ccc\" }}\n        />\n        <button onClick={sendMessage} style={{ marginLeft: \"10px\", padding: \"10px 20px\", borderRadius: \"20px\", background: \"#007bff\", color: \"#fff\", border: \"none\" }}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}